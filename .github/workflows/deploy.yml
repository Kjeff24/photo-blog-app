name: Deploy Photo Blog Application

on:
  pull_request:
    types: [closed]
    branches:
      - test
      - prod

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIMARY_REGION: ${{ secrets.AWS_REGION }}
  BACKUP_REGION: ${{ secrets.BACKUP_REGION }}
  PRIMARY_TEST_DOMAIN_NAME: ${{ secrets.PRIMARY_TEST_DOMAIN_NAME }}
  PRIMARY_PROD_DOMAIN_NAME: ${{ secrets.PRIMARY_PROD_DOMAIN_NAME }}
  BACKUP_TEST_DOMAIN_NAME: ${{ secrets.BACKUP_TEST_DOMAIN_NAME }}
  BACKUP_PROD_DOMAIN_NAME: ${{ secrets.BACKUP_PROD_DOMAIN_NAME }}\
  PRIMARY_ACM_CERTIFICATE_ARN: ${{ secrets.PRIMARY_ACM_CERTIFICATE_ARN }}\
  BACKUP_ACM_CERTIFICATE_ARN: ${{ secrets.BACKUP_ACM_CERTIFICATE_ARN }}\

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Build with SAM
        run: sam build

      - name: Upload SAM Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sam-build-artifacts
          path: .aws-sam/build

  deploy_primary_region:
    name: Deploy to Primary Region
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/test' || github.ref == 'refs/heads/prod'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download SAM Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sam-build-artifacts
          path: .aws-sam/build

      - name: Configure AWS CLI (Primary Region)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.PRIMARY_REGION }}

      - name: Deploy to Primary Region
        run: |
          echo "Deploying to Primary Region: $PRIMARY_REGION"
          
          STACK_NAME="photo-blog-app-${{ github.ref == 'refs/heads/test' && 'test' || 'prod' }}-main"
          
          PARAM_OVERRIDES="PrimaryRegion=$PRIMARY_REGION"
          
          if [ -n "$BACKUP_REGION" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES BackupRegion=$BACKUP_REGION"
          fi
          
          if [ -n "$FRONT_END_URI" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES FrontendProdHost=$FRONT_END_URI"
          fi
          
          if [ -n "$PRIMARY_ACM_CERTIFICATE_ARN" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryACMCertificateArn=$PRIMARY_ACM_CERTIFICATE_ARN"
          fi
          
          if [ -n "$BACKUP_ACM_CERTIFICATE_ARN" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES BackupACMCertificateArn=$BACKUP_ACM_CERTIFICATE_ARN"
          fi
          
          
          if [ "$GITHUB_REF" == "refs/heads/test" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryDomainName=$PRIMARY_TEST_DOMAIN_NAME BackupDomainName=$BACKUP_TEST_DOMAIN_NAME"
          else
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryDomainName=$PRIMARY_PROD_DOMAIN_NAME BackupDomainName=$BACKUP_PROD_DOMAIN_NAME"
          fi
          
          if [ -n "$PARAM_OVERRIDES" ]; then
            PARAM_OVERRIDES="--parameter-overrides $PARAM_OVERRIDES"
          fi
          
          sam deploy --no-confirm-changeset \
          --stack-name "$STACK_NAME" \
          --resolve-s3 \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --region $PRIMARY_REGION \
          $PARAM_OVERRIDES

  deploy_backup_region:
    name: Deploy to Backup Region
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/test' || github.ref == 'refs/heads/prod'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download SAM Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sam-build-artifacts
          path: .aws-sam/build

      - name: Configure AWS CLI (Backup Region)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.BACKUP_REGION }}

      - name: Deploy to Backup Region
        run: |
          echo "Deploying to Backup Region: $BACKUP_REGION"
          
          STACK_NAME="photo-blog-app-${{ github.ref == 'refs/heads/test' && 'test' || 'prod' }}-backup"
          
          PARAM_OVERRIDES="PrimaryRegion=$PRIMARY_REGION"
          
          if [ -n "$BACKUP_REGION" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES BackupRegion=$BACKUP_REGION"
          fi
          
          if [ -n "$FRONT_END_URI" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES FrontendProdHost=$FRONT_END_URI"
          fi
          
          if [ -n "$PRIMARY_ACM_CERTIFICATE_ARN" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryACMCertificateArn=$PRIMARY_ACM_CERTIFICATE_ARN"
          fi
          
          if [ -n "$BACKUP_ACM_CERTIFICATE_ARN" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES BackupACMCertificateArn=$BACKUP_ACM_CERTIFICATE_ARN"
          fi
          
          if [ "$GITHUB_REF" == "refs/heads/test" ]; then
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryDomainName=$PRIMARY_TEST_DOMAIN_NAME BackupDomainName=$BACKUP_TEST_DOMAIN_NAME"
          else
            PARAM_OVERRIDES="$PARAM_OVERRIDES PrimaryDomainName=$PRIMARY_PROD_DOMAIN_NAME BackupDomainName=$BACKUP_PROD_DOMAIN_NAME"
          fi
          
          if [ -n "$PARAM_OVERRIDES" ]; then
            PARAM_OVERRIDES="--parameter-overrides $PARAM_OVERRIDES"
          fi
          
          sam deploy --no-confirm-changeset \
          --stack-name "$STACK_NAME" \
          --resolve-s3 \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --region $BACKUP_REGION \
          $PARAM_OVERRIDES
